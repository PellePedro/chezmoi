#!/bin/bash

set -eufo pipefail

log() {
  printf "[CHEZMOI] %s\n" "$@"
}

# Check if Go is installed
if ! command -v go &> /dev/null; then
  log "Go is not installed. Please install Go first."
  exit 0
fi

log "Installing Go tools..."

# Create Go bin directory if it doesn't exist
mkdir -p "$HOME/go/bin"

# Ensure Go bin is in PATH
export PATH="${PATH}:${HOME}/go/bin"

# Go tools to install
{{ $gotools := list
    "golang.org/x/tools/gopls@latest"
    "github.com/go-delve/delve/cmd/dlv@latest"
    "github.com/golangci/golangci-lint/cmd/golangci-lint@v1.63.3"
    "honnef.co/go/tools/cmd/staticcheck@2025.1.1"
    "github.com/fatih/gomodifytags@latest"
    "github.com/josharian/impl@latest"
    "github.com/cweill/gotests/gotests@latest"
    "github.com/koron/iferr@latest"
    "golang.org/x/tools/cmd/goimports@latest"
    "golang.org/x/tools/cmd/gorename@latest"
    "github.com/jesseduffield/lazygit@latest"
    "github.com/fullstorydev/grpcurl/cmd/grpcurl@latest"
    "google.golang.org/protobuf/cmd/protoc-gen-go@latest"
    "google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest"
-}}

# Install each tool
{{ range ($gotools | sortAlpha | uniq) -}}
log "Installing {{ . }}..."
go install {{ . }} || echo "Failed to install {{ . }}"
{{ end -}}

log "Go tools installation completed!"

# Verify installations
log "Verifying installed tools:"
echo "========================="

# Extract just the binary name from each tool for verification
{{ range ($gotools | sortAlpha | uniq) -}}
{{ $parts := splitList "/" . -}}
{{ $lastPart := last $parts -}}
{{ $binary := splitList "@" $lastPart | first -}}
{{ if eq $binary "cmd" -}}
  {{ $binary = index $parts (sub (len $parts) 2) -}}
{{ end -}}
if command -v {{ $binary }} &> /dev/null; then
    echo "✓ {{ $binary }} installed"
else
    echo "✗ {{ $binary }} not found in PATH"
fi
{{ end -}}