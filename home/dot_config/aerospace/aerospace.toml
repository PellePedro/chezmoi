# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

after-startup-command = [ 
  'exec-and-forget /opt/homebrew/bin/borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]


#   'exec-and-forget sketchybar',
# 	'exec-and-forget borders'
# ]
#
# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 48

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  # The callback itself

#
[[on-window-detected]]
if.app-name-regex-substring = 'cursor'
run = 'layout floating'

# =============== 1 - Mac workspace ====================
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "move-node-to-workspace 1"


# =============== O - Notes workspace ====================
[[on-window-detected]]
if.app-name-regex-substring = 'bear'
run = "move-node-to-workspace O"

[[on-window-detected]]
if.app-name-regex-substring = 'obsidian'
run = "move-node-to-workspace O"

# =============== S - Skyramp workspace ====================
#
[[on-window-detected]]
if.app-name-regex-substring = 'slack'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-name-regex-substring = 'chrome'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-name-regex-substring = 'zoom'
run = "move-node-to-workspace S"
#
# =============== B - Browser workspace ====================
#
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = "move-node-to-workspace B"

#
# =============== D - Debug workspace ====================
#
[[on-window-detected]]
if.app-id = 'com.duckduckgo.macos.browser'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-name-regex-substring = 'code'
run = "move-node-to-workspace D"

# =============== F - Finder ===================

[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = "move-node-to-workspace F"

# =============== G - Ghostty Terminal workspace ====================
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace G"

[[on-window-detected]]
if.app-name-regex-substring = 'wezterm'
run = "move-node-to-workspace G"

# =============== F - Finder ===================

[[on-window-detected]]
if.app-name-regex-substring = 'messages'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-name-regex-substring = 'messenger'
run = "move-node-to-workspace M"

# =============== T - Git workspace ====================
[[on-window-detected]]
if.app-name-regex-substring = 'tower'
run = "move-node-to-workspace T"

[[on-window-detected]]
if.app-name-regex-substring = 'araxis'
run = "move-node-to-workspace T"

# =============== W - windsurf ====================
[[on-window-detected]]
if.app-name-regex-substring = 'windsurf'
run = "move-node-to-workspace W"

# =============== A - AI workspace ====================

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
run = "move-node-to-workspace A"

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        60
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

alt-ctrl-shift-f = 'fullscreen'
alt-ctrl-f = 'layout floating tiling'

alt-shift-left = 'join-with left'
alt-shift-down = 'join-with down'
alt-shift-up = 'join-with up'
alt-shift-right = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-a = ['workspace A', 'layout tiling', 'exec-and-forget open "/Applications/ChatGPT.app"']
alt-b = ['workspace B', 'layout tiling']
alt-c = ['workspace C', 'layout tiling', 'exec-and-forget open "/Applications/Google Chrome.app"']
alt-d = ['workspace D', 'layout tiling']
alt-f = ['workspace F', 'layout tiling']
alt-g = ['workspace G', 'layout tiling', 'exec-and-forget open "/Applications/Ghostty.app"']
alt-m = ['workspace M', 'layout tiling']
alt-p = ['workspace P', 'layout tiling']
alt-o = ['workspace O', 'layout tiling', 'exec-and-forget open -a /Applications/Obsidian.app']
alt-r = ['workspace R', 'layout tiling']
alt-s = ['workspace S', 'layout tiling', 'exec-and-forget open "/Applications/Slack.app"']
alt-t = ['workspace T', 'layout tiling', 'exec-and-forget open "/Applications/Tower.app"']
alt-w = ['workspace W', 'layout tiling']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
alt-shift-a = 'move-node-to-workspace A --focus-follows-window'
alt-shift-b = 'move-node-to-workspace B --focus-follows-window'
alt-shift-d = 'move-node-to-workspace D --focus-follows-window'
alt-shift-f = 'move-node-to-workspace F --focus-follows-window'
alt-shift-g = 'move-node-to-workspace G --focus-follows-window'
alt-shift-m = 'move-node-to-workspace M --focus-follows-window'
alt-shift-o = 'move-node-to-workspace O --focus-follows-window'
alt-shift-p = 'move-node-to-workspace P --focus-follows-window'
alt-shift-r = 'move-node-to-workspace R --focus-follows-window'
alt-shift-s = 'move-node-to-workspace S --focus-follows-window'
alt-shift-t = 'move-node-to-workspace T --focus-follows-window'
alt-shift-w = 'move-node-to-workspace W --focus-follows-window'

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
alt-shift-enter = 'mode apps'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# [workspace-to-monitor-force-assignment]
#     1 = '^dell$'
#     2 = '^dell$'
#     3 = '^dell$'
#     4 = '^dell$'
#     5 = 'main'
#     6 = '^elgato$'
